openapi: 3.0.0
info:
  title: Diya Mane Petrol Single Page Portal
  version: 1.0-oas3
  contact:
    name: Deepak
    email: deepak.rampoore@gmail.com
  x-logo:
    url: ''
servers:
  - url: 'http://localhost:8080/api'
    description: ''
paths:
  '/petrol/pumping/byPumpshop/{id}':
    get:
      tags:
        - Pumpings
      parameters:
        - style: simple
          explode: false
          name: id
          description: Business ID
          schema:
            format: int64
            type: integer
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PumpingsDto'
          description: Successful response
      operationId: getPumping
      description: Get pumping from this given pumpshop
  /petrol/pumpshop:
    get:
      tags:
        - PumpShops
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PumpShopDto'
          description: Successful response
      operationId: getPumpshops
      description: Get a list of Pumpshops
    put:
      requestBody:
        description: Pumpshop to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PumpShopDto'
        required: true
      tags:
        - PumpShops
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PumpShopDto'
          description: Successful response
      operationId: updatePumpshop
      description: Update a Pumpshop
    post:
      requestBody:
        description: Pumpshop to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PumpShopDto'
        required: true
      tags:
        - PumpShops
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PumpShopDto'
          description: Successful response
      operationId: addPumpshop
      description: Add a Pumpshop
  '/petrol/pumpshop/{id}':
    get:
      tags:
        - PumpShops
      parameters:
        - style: simple
          explode: false
          name: id
          description: Business ID
          schema:
            format: int64
            type: integer
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PumpShopDto'
          description: Successful response
      operationId: getPumpshop
      description: Get  Pumpshop Details
  '/petrol/vehicleowner/byStatus/{status}':
    get:
      tags:
        - VehicleOwner
      parameters:
        - style: simple
          explode: true
          name: status
          description: Status of the VehicleOwner
          schema:
            $ref: '#/components/schemas/StatusEnum'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VehicleOwnerDto'
          description: Successful response
      operationId: findAllByStatus
      description: >-
        Gets `VehicleOwnerDto` objects. Optional query param of **size**
        determines size of returned array 
  /petrol/vehicleowner:
    get:
      tags:
        - VehicleOwner
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VehicleOwnerDto'
          description: Successful response
      operationId: findAll
      description: >-
        Gets `VehicleOwnerDto` objects. Optional query param of **size**
        determines size of returned array 
    put:
      requestBody:
        description: Vehicle to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleOwnerDto'
        required: true
      tags:
        - VehicleOwner
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleOwnerDto'
          description: Successful response
      operationId: updateOwner
      description: Update  a new Vehicle Owner
    post:
      requestBody:
        description: Vehicle to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleOwnerDto'
        required: true
      tags:
        - VehicleOwner
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleOwnerDto'
          description: Successful response
      operationId: addVehicleOwner
      description: Create a new Vehicle Owner
  '/petrol/vehicleowner/{id}':
    get:
      tags:
        - VehicleOwner
      parameters:
        - style: simple
          explode: false
          name: id
          description: VehicleOwner PK
          schema:
            format: int64
            type: integer
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleOwnerDto'
          description: Successful response
      operationId: getOwner
      description: Get Vehicle Owner by business id
components:
  schemas:
    PumpShopDto:
      type: object
      properties:
        id:
          type: integer
        name:
          maximum: 50
          minimum: 10
          type: string
        address1:
          maximum: 50
          minimum: 10
          type: string
        address2:
          maximum: 50
          type: string
        city:
          maximum: 20
          minimum: 2
          type: string
        zipCode:
          maximum: 10
          minimum: 4
          type: string
        country:
          maximum: 20
          minimum: 2
          type: string
    PumpingsDto:
      type: object
      properties:
        id:
          type: integer
        startReading:
          type: number
        endReading:
          format: double
          type: number
        pumpDate:
          format: date
          type: string
        petrolPumpedInLitres:
          type: number
        billPaid:
          type: number
        distance:
          type: number
        milage:
          type: number
        milagePer100Unit:
          type: number
        petrolPricePerLiter:
          type: number
        pumpShop:
          $ref: '#/components/schemas/PumpShopDto'
    VehicleDto:
      type: object
      properties:
        id:
          type: string
        model:
          type: string
    SubscribedEnum:
      format: ''
      pattern: ''
      enum:
        - 'YES'
        - 'No'
      type: string
      example: ''
      x-last-modified: 1609023083734
    StatusEnum:
      enum:
        - ACTIVE
        - INACTIVE
      type: string
      example: ''
      x-last-modified: 1609023100145
    VehicleOwnerDto:
      type: object
      properties:
        id:
          type: string
        name:
          maximum: 50
          minimum: 10
          type: string
        address1:
          maximum: 50
          minimum: 10
          type: string
        address2:
          maximum: 50
          type: string
        city:
          maximum: 20
          minimum: 2
          type: string
        pinCode:
          maximum: 10
          minimum: 4
          type: string
        country:
          maximum: 20
          minimum: 2
          type: string
        subscribed:
          $ref: '#/components/schemas/SubscribedEnum'
        status:
          $ref: '#/components/schemas/StatusEnum'
        ownedVehicles:
          type: array
          items:
            $ref: '#/components/schemas/VehicleDto'
      example: ''
      x-last-modified: 1609023137278
  securitySchemes: {}
  responses: {}
  parameters: {}
tags:
  - name: PumpShops
  - name: Pumpings
  - name: VehicleOwner
security: []
